/* Generated by dbus-binding-tool; do not edit! */

#include <glib.h>
#include <dbus/dbus-glib.h>

G_BEGIN_DECLS

#ifndef _DBUS_GLIB_ASYNC_DATA_FREE
#define _DBUS_GLIB_ASYNC_DATA_FREE
static
#ifdef G_HAVE_INLINE
inline
#endif
void
_dbus_glib_async_data_free (gpointer stuff)
{
	g_slice_free (DBusGAsyncData, stuff);
}
#endif

#ifndef DBUS_GLIB_CLIENT_WRAPPERS_fr_ensi_bourges_synema_log_player
#define DBUS_GLIB_CLIENT_WRAPPERS_fr_ensi_bourges_synema_log_player

static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_start (DBusGProxy *proxy, const guint64 IN_start_date, const guint64 IN_duration, GError **error)

{
  return dbus_g_proxy_call (proxy, "Start", error, G_TYPE_UINT64, IN_start_date, G_TYPE_UINT64, IN_duration, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_start_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_start_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_start_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_start_async (DBusGProxy *proxy, const guint64 IN_start_date, const guint64 IN_duration, fr_ensi_bourges_synema_log_player_start_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Start", fr_ensi_bourges_synema_log_player_start_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_UINT64, IN_start_date, G_TYPE_UINT64, IN_duration, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_stop (DBusGProxy *proxy, GError **error)

{
  return dbus_g_proxy_call (proxy, "Stop", error, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_stop_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_stop_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_stop_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_stop_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_stop_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Stop", fr_ensi_bourges_synema_log_player_stop_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_set_paused (DBusGProxy *proxy, const gboolean IN_paused, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetPaused", error, G_TYPE_BOOLEAN, IN_paused, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_set_paused_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_set_paused_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_set_paused_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_set_paused_async (DBusGProxy *proxy, const gboolean IN_paused, fr_ensi_bourges_synema_log_player_set_paused_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetPaused", fr_ensi_bourges_synema_log_player_set_paused_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_BOOLEAN, IN_paused, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_set_speed (DBusGProxy *proxy, const gdouble IN_speed, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetSpeed", error, G_TYPE_DOUBLE, IN_speed, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_set_speed_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_set_speed_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_set_speed_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_set_speed_async (DBusGProxy *proxy, const gdouble IN_speed, fr_ensi_bourges_synema_log_player_set_speed_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetSpeed", fr_ensi_bourges_synema_log_player_set_speed_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_DOUBLE, IN_speed, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_set_beginning_date (DBusGProxy *proxy, const guint64 IN_date, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetBeginningDate", error, G_TYPE_UINT64, IN_date, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_set_beginning_date_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_set_beginning_date_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_set_beginning_date_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_set_beginning_date_async (DBusGProxy *proxy, const guint64 IN_date, fr_ensi_bourges_synema_log_player_set_beginning_date_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetBeginningDate", fr_ensi_bourges_synema_log_player_set_beginning_date_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_UINT64, IN_date, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_set_length (DBusGProxy *proxy, const guint64 IN_length, GError **error)

{
  return dbus_g_proxy_call (proxy, "SetLength", error, G_TYPE_UINT64, IN_length, G_TYPE_INVALID, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_set_length_reply) (DBusGProxy *proxy, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_set_length_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_set_length_reply)data->cb) (proxy, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_set_length_async (DBusGProxy *proxy, const guint64 IN_length, fr_ensi_bourges_synema_log_player_set_length_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "SetLength", fr_ensi_bourges_synema_log_player_set_length_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_UINT64, IN_length, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_ping (DBusGProxy *proxy, gboolean* OUT_ping, GError **error)

{
  return dbus_g_proxy_call (proxy, "Ping", error, G_TYPE_INVALID, G_TYPE_BOOLEAN, OUT_ping, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_ping_reply) (DBusGProxy *proxy, gboolean OUT_ping, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_ping_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gboolean OUT_ping;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_BOOLEAN, &OUT_ping, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_ping_reply)data->cb) (proxy, OUT_ping, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_ping_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_ping_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "Ping", fr_ensi_bourges_synema_log_player_ping_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_get_state (DBusGProxy *proxy, gboolean* OUT_started, gboolean* OUT_paused, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetState", error, G_TYPE_INVALID, G_TYPE_BOOLEAN, OUT_started, G_TYPE_BOOLEAN, OUT_paused, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_get_state_reply) (DBusGProxy *proxy, gboolean OUT_started, gboolean OUT_paused, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_get_state_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gboolean OUT_started;
  gboolean OUT_paused;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_BOOLEAN, &OUT_started, G_TYPE_BOOLEAN, &OUT_paused, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_get_state_reply)data->cb) (proxy, OUT_started, OUT_paused, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_get_state_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_get_state_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetState", fr_ensi_bourges_synema_log_player_get_state_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_get_start_date (DBusGProxy *proxy, guint64* OUT_date, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetStartDate", error, G_TYPE_INVALID, G_TYPE_UINT64, OUT_date, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_get_start_date_reply) (DBusGProxy *proxy, guint64 OUT_date, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_get_start_date_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  guint64 OUT_date;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_UINT64, &OUT_date, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_get_start_date_reply)data->cb) (proxy, OUT_date, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_get_start_date_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_get_start_date_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetStartDate", fr_ensi_bourges_synema_log_player_get_start_date_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_get_duration (DBusGProxy *proxy, guint64* OUT_duration, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetDuration", error, G_TYPE_INVALID, G_TYPE_UINT64, OUT_duration, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_get_duration_reply) (DBusGProxy *proxy, guint64 OUT_duration, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_get_duration_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  guint64 OUT_duration;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_UINT64, &OUT_duration, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_get_duration_reply)data->cb) (proxy, OUT_duration, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_get_duration_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_get_duration_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetDuration", fr_ensi_bourges_synema_log_player_get_duration_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_get_time_left (DBusGProxy *proxy, guint64* OUT_time, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetTimeLeft", error, G_TYPE_INVALID, G_TYPE_UINT64, OUT_time, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_get_time_left_reply) (DBusGProxy *proxy, guint64 OUT_time, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_get_time_left_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  guint64 OUT_time;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_UINT64, &OUT_time, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_get_time_left_reply)data->cb) (proxy, OUT_time, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_get_time_left_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_get_time_left_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetTimeLeft", fr_ensi_bourges_synema_log_player_get_time_left_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
static
#ifdef G_HAVE_INLINE
inline
#endif
gboolean
fr_ensi_bourges_synema_log_player_get_speed (DBusGProxy *proxy, gdouble* OUT_speed, GError **error)

{
  return dbus_g_proxy_call (proxy, "GetSpeed", error, G_TYPE_INVALID, G_TYPE_DOUBLE, OUT_speed, G_TYPE_INVALID);
}

typedef void (*fr_ensi_bourges_synema_log_player_get_speed_reply) (DBusGProxy *proxy, gdouble OUT_speed, GError *error, gpointer userdata);

static void
fr_ensi_bourges_synema_log_player_get_speed_async_callback (DBusGProxy *proxy, DBusGProxyCall *call, void *user_data)
{
  DBusGAsyncData *data = (DBusGAsyncData*) user_data;
  GError *error = NULL;
  gdouble OUT_speed;
  dbus_g_proxy_end_call (proxy, call, &error, G_TYPE_DOUBLE, &OUT_speed, G_TYPE_INVALID);
  (*(fr_ensi_bourges_synema_log_player_get_speed_reply)data->cb) (proxy, OUT_speed, error, data->userdata);
  return;
}

static
#ifdef G_HAVE_INLINE
inline
#endif
DBusGProxyCall*
fr_ensi_bourges_synema_log_player_get_speed_async (DBusGProxy *proxy, fr_ensi_bourges_synema_log_player_get_speed_reply callback, gpointer userdata)

{
  DBusGAsyncData *stuff;
  stuff = g_slice_new (DBusGAsyncData);
  stuff->cb = G_CALLBACK (callback);
  stuff->userdata = userdata;
  return dbus_g_proxy_begin_call (proxy, "GetSpeed", fr_ensi_bourges_synema_log_player_get_speed_async_callback, stuff, _dbus_glib_async_data_free, G_TYPE_INVALID);
}
#endif /* defined DBUS_GLIB_CLIENT_WRAPPERS_fr_ensi_bourges_synema_log_player */

G_END_DECLS
